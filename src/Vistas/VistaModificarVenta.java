/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vistas;

import Control.ControlAnimales;
import Control.Retorno;
import GestionControles.EstadoControles;
import Modelo.ModeloAnimales;
import Modelo.ModeloVentanaGeneral;
import Utilidades.Estado;
import Utilidades.Expresiones;
import Utilidades.Utilidades;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author MERRY
 */
public class VistaModificarVenta extends javax.swing.JPanel {
    String id_animal ="";
    Map<String, String> datosVenta= new HashMap<String, String>();
    private ModeloAnimales modeloAnimal;
    private ControlAnimales control;
    ModeloVentanaGeneral modeloVentanaGeneral;
    /**
     * Creates new form VistaModificarVenta
     */
    public VistaModificarVenta() {
        initComponents();
        setSize(484 ,459);
    }
    
    public VistaModificarVenta(ModeloVentanaGeneral modeloVentanaGeneral) {
        initComponents();
        setSize(484 ,459);
        datosVenta = (HashMap<String, String>)modeloVentanaGeneral.getModeloDatos();
        this.modeloVentanaGeneral = modeloVentanaGeneral;
        txtPorcentajeCanal.setEnabled(false);
        txtNumeroAnimal.setEnabled(false);
        txtValorVenta.setEnabled(false);
        control = new ControlAnimales();
        LimpiarFormulario();
        LlenarFormulario();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblTid1 = new javax.swing.JLabel();
        txtNumeroAnimal = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        lblFechaVenta = new javax.swing.JLabel();
        jdFechaVenta = new com.toedter.calendar.JDateChooser();
        lbltitle21 = new javax.swing.JLabel();
        cbTipoVenta = new javax.swing.JComboBox();
        lbltitle20 = new javax.swing.JLabel();
        txtPrecioVenta = new javax.swing.JTextField();
        jSeparator14 = new javax.swing.JSeparator();
        lblPesoCanal = new javax.swing.JLabel();
        txtPesoCanal = new javax.swing.JTextField();
        sepPesoCanal = new javax.swing.JSeparator();
        lblPesoCanal1 = new javax.swing.JLabel();
        txtPorcentajeCanal = new javax.swing.JTextField();
        sepPesoCanal1 = new javax.swing.JSeparator();
        txtPeso = new javax.swing.JTextField();
        sepPesoCanal2 = new javax.swing.JSeparator();
        lblPesoCanal2 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnDescartar = new javax.swing.JButton();
        lbltitle22 = new javax.swing.JLabel();
        txtValorVenta = new javax.swing.JTextField();
        jSeparator15 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)));
        setLayout(new java.awt.GridBagLayout());

        lblTid1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid1.setForeground(new java.awt.Color(59, 123, 50));
        lblTid1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid1.setText("Numero Animal");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        add(lblTid1, gridBagConstraints);

        txtNumeroAnimal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtNumeroAnimal.setForeground(new java.awt.Color(59, 123, 50));
        txtNumeroAnimal.setBorder(null);
        txtNumeroAnimal.setCaretColor(new java.awt.Color(59, 123, 50));
        txtNumeroAnimal.setFocusCycleRoot(true);
        txtNumeroAnimal.setSelectionColor(new java.awt.Color(59, 123, 50));
        txtNumeroAnimal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumeroAnimalFocusLost(evt);
            }
        });
        txtNumeroAnimal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroAnimalKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumeroAnimalKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 120;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
        add(txtNumeroAnimal, gridBagConstraints);

        jSeparator6.setBackground(new java.awt.Color(59, 123, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 119;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        add(jSeparator6, gridBagConstraints);

        lblFechaVenta.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFechaVenta.setForeground(new java.awt.Color(59, 123, 50));
        lblFechaVenta.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblFechaVenta.setText("Fecha de venta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        add(lblFechaVenta, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
        add(jdFechaVenta, gridBagConstraints);

        lbltitle21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbltitle21.setForeground(new java.awt.Color(59, 123, 50));
        lbltitle21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbltitle21.setText("Tipo de venta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 40, 0, 0);
        add(lbltitle21, gridBagConstraints);

        cbTipoVenta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbTipoVenta.setForeground(new java.awt.Color(59, 123, 50));
        cbTipoVenta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Particular", "Matadero" }));
        cbTipoVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoVentaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 113;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 40, 0, 21);
        add(cbTipoVenta, gridBagConstraints);

        lbltitle20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbltitle20.setForeground(new java.awt.Color(59, 123, 50));
        lbltitle20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbltitle20.setText("Precio de venta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        add(lbltitle20, gridBagConstraints);

        txtPrecioVenta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPrecioVenta.setForeground(new java.awt.Color(59, 123, 50));
        txtPrecioVenta.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPrecioVenta.setBorder(null);
        txtPrecioVenta.setCaretColor(new java.awt.Color(59, 123, 50));
        txtPrecioVenta.setSelectionColor(new java.awt.Color(59, 123, 50));
        txtPrecioVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecioVentaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 190;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        add(txtPrecioVenta, gridBagConstraints);

        jSeparator14.setBackground(new java.awt.Color(59, 123, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 189;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        add(jSeparator14, gridBagConstraints);

        lblPesoCanal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPesoCanal.setForeground(new java.awt.Color(59, 123, 50));
        lblPesoCanal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPesoCanal.setText("Peso del canal (Kg)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 84;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        add(lblPesoCanal, gridBagConstraints);

        txtPesoCanal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPesoCanal.setForeground(new java.awt.Color(59, 123, 50));
        txtPesoCanal.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPesoCanal.setBorder(null);
        txtPesoCanal.setCaretColor(new java.awt.Color(59, 123, 50));
        txtPesoCanal.setSelectionColor(new java.awt.Color(59, 123, 50));
        txtPesoCanal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesoCanalKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        add(txtPesoCanal, gridBagConstraints);

        sepPesoCanal.setBackground(new java.awt.Color(59, 123, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 199;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        add(sepPesoCanal, gridBagConstraints);

        lblPesoCanal1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPesoCanal1.setForeground(new java.awt.Color(59, 123, 50));
        lblPesoCanal1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPesoCanal1.setText("Porcentaje de Canal (%)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 40, 0, 21);
        add(lblPesoCanal1, gridBagConstraints);

        txtPorcentajeCanal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPorcentajeCanal.setForeground(new java.awt.Color(59, 123, 50));
        txtPorcentajeCanal.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPorcentajeCanal.setBorder(null);
        txtPorcentajeCanal.setCaretColor(new java.awt.Color(59, 123, 50));
        txtPorcentajeCanal.setSelectionColor(new java.awt.Color(59, 123, 50));
        txtPorcentajeCanal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPorcentajeCanalKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 40, 0, 21);
        add(txtPorcentajeCanal, gridBagConstraints);

        sepPesoCanal1.setBackground(new java.awt.Color(59, 123, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 199;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 21);
        add(sepPesoCanal1, gridBagConstraints);

        txtPeso.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPeso.setForeground(new java.awt.Color(59, 123, 50));
        txtPeso.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPeso.setBorder(null);
        txtPeso.setCaretColor(new java.awt.Color(59, 123, 50));
        txtPeso.setSelectionColor(new java.awt.Color(59, 123, 50));
        txtPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesoKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 40, 0, 21);
        add(txtPeso, gridBagConstraints);

        sepPesoCanal2.setBackground(new java.awt.Color(59, 123, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 199;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 21);
        add(sepPesoCanal2, gridBagConstraints);

        lblPesoCanal2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPesoCanal2.setForeground(new java.awt.Color(59, 123, 50));
        lblPesoCanal2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPesoCanal2.setText("Peso (Kg)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 141;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 40, 0, 21);
        add(lblPesoCanal2, gridBagConstraints);

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/guardar.png"))); // NOI18N
        btnGuardar.setToolTipText("Guardar");
        btnGuardar.setBorderPainted(false);
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setMargin(new java.awt.Insets(2, 10, 2, 8));
        btnGuardar.setName("btnGuardar"); // NOI18N
        btnGuardar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/guardar_over.png"))); // NOI18N
        btnGuardar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/guardar_over.png"))); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = -27;
        gridBagConstraints.ipady = -9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 15, 10);
        add(btnGuardar, gridBagConstraints);

        btnDescartar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/descartar.png"))); // NOI18N
        btnDescartar.setToolTipText("Descartar");
        btnDescartar.setBorderPainted(false);
        btnDescartar.setContentAreaFilled(false);
        btnDescartar.setMargin(new java.awt.Insets(2, 10, 2, 8));
        btnDescartar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/descartar_over.png"))); // NOI18N
        btnDescartar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/descartar_over.png"))); // NOI18N
        btnDescartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescartarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = -27;
        gridBagConstraints.ipady = -9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 15, 0);
        add(btnDescartar, gridBagConstraints);

        lbltitle22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbltitle22.setForeground(new java.awt.Color(59, 123, 50));
        lbltitle22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbltitle22.setText("Valor de venta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        add(lbltitle22, gridBagConstraints);

        txtValorVenta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtValorVenta.setForeground(new java.awt.Color(59, 123, 50));
        txtValorVenta.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtValorVenta.setBorder(null);
        txtValorVenta.setCaretColor(new java.awt.Color(59, 123, 50));
        txtValorVenta.setSelectionColor(new java.awt.Color(59, 123, 50));
        txtValorVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValorVentaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 190;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 40, 0, 0);
        add(txtValorVenta, gridBagConstraints);

        jSeparator15.setBackground(new java.awt.Color(59, 123, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 189;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        add(jSeparator15, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNumeroAnimalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroAnimalFocusLost

    }//GEN-LAST:event_txtNumeroAnimalFocusLost

    private void txtNumeroAnimalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroAnimalKeyPressed

    }//GEN-LAST:event_txtNumeroAnimalKeyPressed

    private void txtNumeroAnimalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroAnimalKeyReleased

    }//GEN-LAST:event_txtNumeroAnimalKeyReleased

    private void cbTipoVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoVentaActionPerformed
        boolean mostrar = cbTipoVenta.getSelectedIndex() == 2;
//        lblPesoCanal.setVisible(mostrar);
//        txtPesoCanal.setVisible(mostrar);
//        sepPesoCanal.setVisible(mostrar);
    }//GEN-LAST:event_cbTipoVentaActionPerformed

    private void txtPrecioVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioVentaKeyReleased
        String precioVenta = txtPrecioVenta.getText();
        String precioSinPuntos = precioVenta.indexOf(".") > -1 ? precioVenta.replace(".", "") : precioVenta;
        String precioFormateado = Expresiones.procesarSoloNumP(precioSinPuntos);
        precioFormateado = Utilidades.MascaraMonedaConDecimales(precioFormateado);
        txtPrecioVenta.setText(precioFormateado);

        setCalculosVenta();
    }//GEN-LAST:event_txtPrecioVentaKeyReleased

    private void txtPesoCanalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesoCanalKeyReleased
        String pesoCanal = txtPesoCanal.getText();
        String pesoCanalSinPuntos = pesoCanal.indexOf(".") > -1 ? pesoCanal.replace(".", "") : pesoCanal;
        String pesoCanalFormateado = Expresiones.procesarSoloNumP(pesoCanalSinPuntos);
        pesoCanalFormateado = Utilidades.MascaraMonedaConDecimales(pesoCanalFormateado);
        txtPesoCanal.setText(pesoCanalFormateado);

        setCalculosVenta();
    }//GEN-LAST:event_txtPesoCanalKeyReleased

    private void txtPorcentajeCanalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPorcentajeCanalKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPorcentajeCanalKeyReleased

    private void txtPesoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesoKeyReleased
        String peso = txtPeso.getText();
        String pesoSinPuntos = peso.indexOf(".") > -1 ? peso.replace(".", "") : peso;
        String pesoCanalFormateado = Expresiones.procesarSoloNumP(pesoSinPuntos);
        pesoCanalFormateado = Utilidades.MascaraMonedaConDecimales(pesoCanalFormateado);
        txtPeso.setText(pesoCanalFormateado);

        setCalculosVenta();
    }//GEN-LAST:event_txtPesoKeyReleased

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnDescartarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescartarActionPerformed
        Descartar();
    }//GEN-LAST:event_btnDescartarActionPerformed

    private void txtValorVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorVentaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorVentaKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDescartar;
    private javax.swing.JButton btnGuardar;
    public javax.swing.JComboBox cbTipoVenta;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator6;
    private com.toedter.calendar.JDateChooser jdFechaVenta;
    private javax.swing.JLabel lblFechaVenta;
    private javax.swing.JLabel lblPesoCanal;
    private javax.swing.JLabel lblPesoCanal1;
    private javax.swing.JLabel lblPesoCanal2;
    private javax.swing.JLabel lblTid1;
    private javax.swing.JLabel lbltitle20;
    private javax.swing.JLabel lbltitle21;
    private javax.swing.JLabel lbltitle22;
    private javax.swing.JSeparator sepPesoCanal;
    private javax.swing.JSeparator sepPesoCanal1;
    private javax.swing.JSeparator sepPesoCanal2;
    public javax.swing.JTextField txtNumeroAnimal;
    public javax.swing.JTextField txtPeso;
    public javax.swing.JTextField txtPesoCanal;
    public javax.swing.JTextField txtPorcentajeCanal;
    public javax.swing.JTextField txtPrecioVenta;
    public javax.swing.JTextField txtValorVenta;
    // End of variables declaration//GEN-END:variables

    private void LlenarFormulario() {
        id_animal = ""+datosVenta.get("id");
        txtNumeroAnimal.setText(""+datosVenta.get("numero"));
        txtPeso.setText(""+datosVenta.get("peso"));
        try {
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            Date fecha = formato.parse(""+datosVenta.get("fecha_venta"));
            jdFechaVenta.setDate(fecha);
        }catch(Exception e){
            
        }
        cbTipoVenta.setSelectedItem(Utilidades.CapitaliceTexto(datosVenta.get("tipo_venta")));
        txtPesoCanal.setText(""+datosVenta.get("peso_canal"));
        txtPrecioVenta.setText(""+datosVenta.get("precio_venta"));
        double porc = 0;
        double valor_venta = 0;
        DecimalFormat df = new DecimalFormat("#.0");
        if(!datosVenta.get("peso_canal").equals("0")){
            porc = Math.round(Double.parseDouble(datosVenta.get("peso_canal")) / Double.parseDouble(datosVenta.get("peso")) * 100);

            valor_venta = Double.parseDouble(datosVenta.get("precio_venta"))*Double.parseDouble(datosVenta.get("peso_canal"));
        }else{
            valor_venta = Double.parseDouble(datosVenta.get("precio_venta"))*Double.parseDouble(datosVenta.get("peso"));
        }
        txtPorcentajeCanal.setText(""+(!datosVenta.get("peso_canal").equals("0")?""+df.format(porc):""));
        txtValorVenta.setText(""+Utilidades.MascaraMonedaConDecimales((""+valor_venta).replace(".", ","))); 
        
    }

    private void Guardar() {
        //<editor-fold defaultstate="collapsed" desc="VALIDACIONES">
        if (jdFechaVenta.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Debe especificar la fecha de venta del animal.");
            jdFechaVenta.requestFocusInWindow();
            return;
        }

        if (txtPrecioVenta.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe especificar el precio de venta del animal.");
            txtPrecioVenta.requestFocusInWindow();
            return;
        }

        if (cbTipoVenta.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Seleccione el tipo de venta del animal a crear.");
            cbTipoVenta.requestFocusInWindow();
            return;
        }

        if (cbTipoVenta.getSelectedIndex() == 2) {
            if (txtPesoCanal.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe especificar el peso de canal para los datos de la venta.");
                txtPesoCanal.requestFocusInWindow();
                return;
            }
        }
//</editor-fold>
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        
        modeloAnimal = new ModeloAnimales();
        modeloAnimal.setId(id_animal);
        modeloAnimal.setPeso(txtPeso.getText().trim());
        Calendar fechaVenta = jdFechaVenta.getCalendar();
        modeloAnimal.setFechaVenta(sdf.format(fechaVenta.getTime()));
        modeloAnimal.setPrecioVenta(txtPrecioVenta.getText().replace(".", "").replace(",", "."));
        String pesoCanal = txtPesoCanal.getText();
        pesoCanal = pesoCanal.isEmpty()?"0":pesoCanal;
        modeloAnimal.setPesoCanal(txtPesoCanal.getText().replace(".", "").replace(",", "."));
        modeloAnimal.setTipoVenta("'" + cbTipoVenta.getSelectedItem().toString().toLowerCase() + "'");
        
        int retorno = control.ActualizarVenta(modeloAnimal);
        
        String mensaje = "";
        switch (retorno) {
            case Retorno.EXITO:
                mensaje = "Registro actualizado satisfactoriamente.";
                break;
            case Retorno.ERROR:
                mensaje = "El registro no pudo ser actualizado.";
                break;
            case Retorno.EXCEPCION_SQL:
                mensaje = "Ocurrio un error en la base de datos\nOperación no realizada.";
                break;
            case Retorno.CLASE_NO_ENCONTRADA:
                mensaje = "Ocurrio un error con el conector de la base de datos\nOperación no realizada.";
                break;
        }

        JOptionPane.showMessageDialog(this, mensaje);
        if(modeloVentanaGeneral.getPanelPadre() instanceof VistaHistoricoVentas){
            ((VistaHistoricoVentas)modeloVentanaGeneral.getPanelPadre()).RetornoVistaGeneral(modeloVentanaGeneral); 
        }
        ((VistaGeneral)modeloVentanaGeneral.getFrameVentana()).dispose();
    }

    private void Descartar() {
        LimpiarFormulario();
    }

    private void setCalculosVenta() {
        double porc = 0;
        double valor_venta = 0;
        DecimalFormat df = new DecimalFormat("#.0");
        if(cbTipoVenta.getSelectedItem().toString().toUpperCase().equals("MATADERO")){
            porc = Math.round(
                    Double.parseDouble(
                            (txtPesoCanal.getText().equals("")?"0":txtPesoCanal.getText().replace(".", "").replace(",","."))
                    ) / 
                    Double.parseDouble(
                            (txtPeso.getText().equals("")?"1":txtPeso.getText().replace(".", "").replace(",","."))
                    ) * 100);

            valor_venta = Double.parseDouble(txtPrecioVenta.getText().replace(".", "").replace(",","."))*Double.parseDouble((txtPesoCanal.getText().equals("")?"0":txtPesoCanal.getText().replace(".", "").replace(",",".")));
        }else{
            valor_venta = Double.parseDouble(txtPrecioVenta.getText().replace(".", "").replace(",","."))*Double.parseDouble((txtPeso.getText().equals("")?"0":txtPeso.getText().replace(".", "").replace(",",".")));
        }
        txtPorcentajeCanal.setText(""+(cbTipoVenta.getSelectedItem().toString().toUpperCase().equals("MATADERO")?df.format(porc):""));
        txtValorVenta.setText(""+Utilidades.MascaraMonedaConDecimales(df.format(valor_venta))); 
    }

    private void LimpiarFormulario() {
        id_animal = "";
        txtPeso.setText("");
        txtPesoCanal.setText("");
        txtPrecioVenta.setText("");
        txtValorVenta.setText("");
        cbTipoVenta.setSelectedIndex(0);
        jdFechaVenta.setCalendar(Calendar.getInstance());
    }
  

}
