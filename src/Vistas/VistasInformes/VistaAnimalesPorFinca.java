/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.VistasInformes;

import Control.ControlGeneral;
import Control.ControlInformes;
import Modelo.ModeloInformes;
import Utilidades.Utilidades;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JOptionPane;

/**
 *
 * @author DOLFHANDLER
 */
public class VistaAnimalesPorFinca extends javax.swing.JPanel {

    private ControlGeneral controlgen;
    private String idFinca;
    private String idTipoAnimal;
    private List<Map<String, String>> listaFincas;
    private List<Map<String, String>> listaTipoAnimales;
    private List<Map<String, String>> listaGrupos;
    private DefaultListModel modlistGrupos;
    private DefaultListModel modlistCampoAdicionales;
    private Map<String, String> informacionBasica;
    private ArrayList<String> informacionAdicional;
    private Map<String, Object> informacion;
    private ArrayList<String> listaInfoAdicional;

    public VistaAnimalesPorFinca() {
        initComponents();
        lstGrupos.setSelectionModel(new DefaultListSelectionModel() {
            private int i0 = -1;
            private int i1 = -1;

            public void setSelectionInterval(int index0, int index1) {
                if (i0 == index0 && i1 == index1) {
                    if (getValueIsAdjusting()) {
                        setValueIsAdjusting(false);
                        setSelection(index0, index1);
                    }
                } else {
                    i0 = index0;
                    i1 = index1;
                    setValueIsAdjusting(false);
                    setSelection(index0, index1);
                }
            }

            private void setSelection(int index0, int index1) {
                if (super.isSelectedIndex(index0)) {
                    super.removeSelectionInterval(index0, index1);
                } else {
                    super.addSelectionInterval(index0, index1);
                }
            }
        });
        listInfoAdicional.setSelectionModel(new DefaultListSelectionModel() {
            private int i0 = -1;
            private int i1 = -1;

            public void setSelectionInterval(int index0, int index1) {
                if (i0 == index0 && i1 == index1) {
                    if (getValueIsAdjusting()) {
                        setValueIsAdjusting(false);
                        setSelection(index0, index1);
                    }
                } else {
                    i0 = index0;
                    i1 = index1;
                    setValueIsAdjusting(false);
                    setSelection(index0, index1);
                }
            }

            private void setSelection(int index0, int index1) {
                if (super.isSelectedIndex(index0)) {
                    super.removeSelectionInterval(index0, index1);
                } else {
                    super.addSelectionInterval(index0, index1);
                }
            }
        });

        idFinca = "";
        idTipoAnimal = "";
        controlgen = new ControlGeneral();
        modlistGrupos = new DefaultListModel();
        modlistCampoAdicionales = new DefaultListModel();
        informacionBasica = new HashMap<>();
        informacionAdicional = new ArrayList<>();
        informacion = new HashMap<>();
        listaInfoAdicional = new ArrayList<>();
        CargarListaFincas();
        cargarListaInformacionAdicional();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTid1 = new javax.swing.JLabel();
        cbFinca = new javax.swing.JComboBox();
        lblTid2 = new javax.swing.JLabel();
        cbTipoAnimales = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        lblTid4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstGrupos = new javax.swing.JList();
        lblTid5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listInfoAdicional = new javax.swing.JList();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTid1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid1.setForeground(new java.awt.Color(59, 123, 50));
        lblTid1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid1.setText("Finca");

        cbFinca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbFinca.setForeground(new java.awt.Color(59, 123, 50));
        cbFinca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFincaActionPerformed(evt);
            }
        });

        lblTid2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid2.setForeground(new java.awt.Color(59, 123, 50));
        lblTid2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid2.setText("Tipo Animales");

        cbTipoAnimales.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbTipoAnimales.setForeground(new java.awt.Color(59, 123, 50));
        cbTipoAnimales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoAnimalesActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(59, 123, 50));
        jLabel1.setText("Informe");

        lblTid4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid4.setForeground(new java.awt.Color(59, 123, 50));
        lblTid4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid4.setText("Grupos");

        lstGrupos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lstGrupos.setForeground(new java.awt.Color(59, 123, 50));
        lstGrupos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstGrupos.setSelectionBackground(new java.awt.Color(59, 123, 50));
        jScrollPane2.setViewportView(lstGrupos);

        lblTid5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid5.setForeground(new java.awt.Color(59, 123, 50));
        lblTid5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid5.setText("Informaci√≥n adicional");

        listInfoAdicional.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        listInfoAdicional.setForeground(new java.awt.Color(59, 123, 50));
        listInfoAdicional.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listInfoAdicional.setSelectionBackground(new java.awt.Color(59, 123, 50));
        jScrollPane3.setViewportView(listInfoAdicional);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTid1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(lblTid2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblTid4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(68, 68, 68)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblTid5, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(cbFinca, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(cbTipoAnimales, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTid1)
                    .addComponent(lblTid2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbFinca, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTipoAnimales, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTid4)
                        .addGap(0, 0, 0)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTid5)
                        .addGap(0, 0, 0)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbFincaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFincaActionPerformed
        if (cbFinca.getItemCount() > 0) {
            System.out.println("cbFinca.getSelectedIndex()--" + cbFinca.getSelectedIndex());
            if (cbFinca.getSelectedIndex() >= 0) {
                if (!idFinca.equals(listaFincas.get(cbFinca.getSelectedIndex()).get("ID"))) {
                    Utilidades.LimpiarJList(lstGrupos, modlistGrupos);
                }
                idFinca = listaFincas.get(cbFinca.getSelectedIndex()).get("ID");
                CargarListaTipoAnimales();
            } else {
                cbTipoAnimales.removeAllItems();
            }
        }
    }//GEN-LAST:event_cbFincaActionPerformed

    private void cbTipoAnimalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoAnimalesActionPerformed
        if (cbTipoAnimales.getItemCount() > 0) {
            if (cbTipoAnimales.getSelectedIndex() >= 0) {
                idTipoAnimal = listaTipoAnimales.get(cbTipoAnimales.getSelectedIndex()).get("ID");
                CargarGrupos();
            }
        }
    }//GEN-LAST:event_cbTipoAnimalesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox cbFinca;
    public javax.swing.JComboBox cbTipoAnimales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblTid1;
    private javax.swing.JLabel lblTid2;
    private javax.swing.JLabel lblTid4;
    private javax.swing.JLabel lblTid5;
    private javax.swing.JList listInfoAdicional;
    private javax.swing.JList lstGrupos;
    // End of variables declaration//GEN-END:variables

    private void CargarListaFincas() {
        listaFincas = controlgen.GetComboBox("SELECT '-1' AS ID, 'Seleccionar' AS DESCRIPCION\n"
                + "UNION\n"
                + "SELECT id AS ID, descripcion AS DESCRIPCION\n"
                + "FROM fincas");

        Utilidades.LlenarComboBox(cbFinca, listaFincas, "DESCRIPCION");
        cbFinca.setSelectedIndex(1);
        CargarListaTipoAnimales();
    }

    private void CargarListaTipoAnimales() {
        listaTipoAnimales = controlgen.GetComboBox("SELECT '-1' AS ID, 'Seleccionar' AS DESCRIPCION\n"
                + "UNION\n"
                + "SELECT id AS ID, descripcion AS DESCRIPCION\n"
                + "FROM tipo_animales\n"
                + "WHERE id_finca = '" + idFinca + "' AND estado = 'Activo'\n"
                + "ORDER BY id ASC");

        Utilidades.LlenarComboBox(cbTipoAnimales, listaTipoAnimales, "DESCRIPCION");
        cbTipoAnimales.setSelectedIndex(0);
    }

    private void CargarGrupos() {
        listaGrupos = controlgen.GetComboBox("SELECT id AS ID, descripcion AS DESCRIPCION\n"
                + "FROM grupos\n"
                + "WHERE `id_tipo_animal` = '" + idTipoAnimal + "' AND estado = 'Activo'\n"
                + "ORDER BY descripcion ASC");
        Utilidades.LlenarJList(listaGrupos, "DESCRIPCION", lstGrupos, modlistGrupos);
    }

    private void cargarListaInformacionAdicional() {
        listaInfoAdicional = new ArrayList<>();

        //<editor-fold defaultstate="collapsed" desc="DATOS ADICIONALES">
        listaInfoAdicional.add("CALIFICACION");
        listaInfoAdicional.add("CAPADO");
        listaInfoAdicional.add("DESCORNADO");
        listaInfoAdicional.add("DESCRIPCION MUERTE");
        listaInfoAdicional.add("DESTETE");
        listaInfoAdicional.add("FECHA DESTETE");
        listaInfoAdicional.add("FECHA MUERTE");
        listaInfoAdicional.add("FECHA NACIMIENTO");
        listaInfoAdicional.add("FECHA NOVILLA");
        listaInfoAdicional.add("FECHA VENTA");
        listaInfoAdicional.add("GRUPO");
        listaInfoAdicional.add("HIERRO");
        listaInfoAdicional.add("HIERRO FISICO");
        listaInfoAdicional.add("IMPLANTE");
        listaInfoAdicional.add("MUERTE");
        listaInfoAdicional.add("NOTAS");
        listaInfoAdicional.add("NUMERO");
        listaInfoAdicional.add("NUMERO DESCENDIENTE");
        listaInfoAdicional.add("NUMERO MAMA");
        listaInfoAdicional.add("NUMERO MAMA ADOPTIVA");
        listaInfoAdicional.add("PESO");
        listaInfoAdicional.add("PESO CANAL");
        listaInfoAdicional.add("PESO DESTETE");
        listaInfoAdicional.add("PRECIO VENTA");
        listaInfoAdicional.add("TIPO VENTA");
        listaInfoAdicional.add("SEXO");
        listaInfoAdicional.add("VENTA");
//</editor-fold>

        Utilidades.LlenarJListByArrayList(listaInfoAdicional, listInfoAdicional, modlistCampoAdicionales);
    }

    public void CrearInforme() {
        String[] idsInfoAdicional = Utilidades.getDatosListaByArrayList(listInfoAdicional, listaInfoAdicional);
        String[] idsGrupos = Utilidades.getDatosLista(lstGrupos, listaGrupos, "ID");
        String inGrupos = Utilidades.getIN(idsGrupos);
        String inInfoAdicional = Utilidades.getIN(idsInfoAdicional);
        listaInfoAdicional.add(inGrupos);
        listaInfoAdicional.add(inInfoAdicional);
        
        if(inGrupos.equals("")){
            JOptionPane.showMessageDialog(null, "Por favor seleccione al menos un grupo para realizar la operacion.");
            return;
        }
        
        if(idTipoAnimal.equals("-1")){
            JOptionPane.showMessageDialog(null, "Por favor seleccione el tipo de animal para realizar la operacion.");
            return;
        }
        informacion.put("IDTIPO", idTipoAnimal);
        informacion.put("IDFINCA", idFinca);
        informacion.put("INFORMACION", listaInfoAdicional);
        
        ModeloInformes informes = new ModeloInformes();
        informes.setCategoria("0");
        informes.setInforme("3");
        informes.setInformacion(informacion);

        ControlInformes contInformes = new ControlInformes();
        contInformes.GenerarInformes(informes);

    }

}
