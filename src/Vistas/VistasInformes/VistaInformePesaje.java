/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.VistasInformes;

import Control.ControlGeneral;
import Control.ControlInformes;
import Modelo.ModeloInformes;
import Utilidades.Utilidades;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author DOLFHANDLER
 */
public class VistaInformePesaje extends javax.swing.JPanel {

    public ControlGeneral controlgen = new ControlGeneral();
    public String idFinca;
    public String idTipoAnimal;
    public List<Map<String, String>> listaFincas;
    public List<Map<String, String>> listaTipoAnimales;
    public List<Map<String, String>> listaMedicamentos;
    public List<Map<String, String>> listaGrupos;
    public DefaultListModel modlistGrupos;
    public DefaultListModel modlistMedicamentos;

    /**
     * Creates new form VistaInformePesaje
     */
    public VistaInformePesaje() {
        initComponents();
        lstMedicamentos.setSelectionModel(new DefaultListSelectionModel() {
            private int i0 = -1;
            private int i1 = -1;

            public void setSelectionInterval(int index0, int index1) {
                if (i0 == index0 && i1 == index1) {
                    if (getValueIsAdjusting()) {
                        setValueIsAdjusting(false);
                        setSelection(index0, index1);
                    }
                } else {
                    i0 = index0;
                    i1 = index1;
                    setValueIsAdjusting(false);
                    setSelection(index0, index1);
                }
            }

            private void setSelection(int index0, int index1) {
                if (super.isSelectedIndex(index0)) {
                    super.removeSelectionInterval(index0, index1);
                } else {
                    super.addSelectionInterval(index0, index1);
                }
            }
        });
        lstGrupos.setSelectionModel(new DefaultListSelectionModel() {
            private int i0 = -1;
            private int i1 = -1;

            public void setSelectionInterval(int index0, int index1) {
                if (i0 == index0 && i1 == index1) {
                    if (getValueIsAdjusting()) {
                        setValueIsAdjusting(false);
                        setSelection(index0, index1);
                    }
                } else {
                    i0 = index0;
                    i1 = index1;
                    setValueIsAdjusting(false);
                    setSelection(index0, index1);
                }
            }

            private void setSelection(int index0, int index1) {
                if (super.isSelectedIndex(index0)) {
                    super.removeSelectionInterval(index0, index1);
                } else {
                    super.addSelectionInterval(index0, index1);
                }
            }
        });

        idFinca = "";
        idTipoAnimal = "";
        listaFincas = new ArrayList<>();
        listaTipoAnimales = new ArrayList<>();
        modlistGrupos = new DefaultListModel();
        modlistMedicamentos = new DefaultListModel();
        CargarListaFincas();
        CargarListaMedicamentos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        lblTid2 = new javax.swing.JLabel();
        cbTipoAnimales = new javax.swing.JComboBox();
        cbFinca = new javax.swing.JComboBox();
        lblTid = new javax.swing.JLabel();
        lblTid1 = new javax.swing.JLabel();
        chHembra = new javax.swing.JCheckBox();
        chMacho = new javax.swing.JCheckBox();
        lblTid3 = new javax.swing.JLabel();
        lblTid4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstMedicamentos = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstGrupos = new javax.swing.JList();

        setBackground(new java.awt.Color(255, 255, 255));
        setAlignmentX(1.0F);
        setAlignmentY(1.0F);
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(59, 123, 50));
        jLabel1.setText("Pesaje");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 5, 15);
        add(jLabel1, gridBagConstraints);

        lblTid2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid2.setForeground(new java.awt.Color(59, 123, 50));
        lblTid2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid2.setText("Tipo Animales");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 15);
        add(lblTid2, gridBagConstraints);

        cbTipoAnimales.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbTipoAnimales.setForeground(new java.awt.Color(59, 123, 50));
        cbTipoAnimales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoAnimalesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 15);
        add(cbTipoAnimales, gridBagConstraints);

        cbFinca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbFinca.setForeground(new java.awt.Color(59, 123, 50));
        cbFinca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFincaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 5);
        add(cbFinca, gridBagConstraints);

        lblTid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid.setForeground(new java.awt.Color(59, 123, 50));
        lblTid.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid.setText("Medicamentos");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 15, 0, 5);
        add(lblTid, gridBagConstraints);

        lblTid1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid1.setForeground(new java.awt.Color(59, 123, 50));
        lblTid1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid1.setText("Finca");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 15, 0, 5);
        add(lblTid1, gridBagConstraints);

        chHembra.setBackground(new java.awt.Color(255, 255, 255));
        chHembra.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chHembra.setForeground(new java.awt.Color(59, 123, 50));
        chHembra.setText("Hembra");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.125;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(chHembra, gridBagConstraints);

        chMacho.setBackground(new java.awt.Color(255, 255, 255));
        chMacho.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chMacho.setForeground(new java.awt.Color(59, 123, 50));
        chMacho.setText("Macho");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.125;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        add(chMacho, gridBagConstraints);

        lblTid3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid3.setForeground(new java.awt.Color(59, 123, 50));
        lblTid3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid3.setText("Sexo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 15, 0, 0);
        add(lblTid3, gridBagConstraints);

        lblTid4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid4.setForeground(new java.awt.Color(59, 123, 50));
        lblTid4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid4.setText("Grupos");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 15);
        add(lblTid4, gridBagConstraints);

        lstMedicamentos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lstMedicamentos.setForeground(new java.awt.Color(59, 123, 50));
        lstMedicamentos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstMedicamentos.setSelectionBackground(new java.awt.Color(59, 123, 50));
        jScrollPane1.setViewportView(lstMedicamentos);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.9;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 15, 5);
        add(jScrollPane1, gridBagConstraints);

        lstGrupos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lstGrupos.setForeground(new java.awt.Color(59, 123, 50));
        lstGrupos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstGrupos.setSelectionBackground(new java.awt.Color(59, 123, 50));
        jScrollPane2.setViewportView(lstGrupos);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.9;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 15, 15);
        add(jScrollPane2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void cbTipoAnimalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoAnimalesActionPerformed
        if (cbTipoAnimales.getItemCount() > 0) {
            if (cbTipoAnimales.getSelectedIndex() >= 0) {
                idTipoAnimal = listaTipoAnimales.get(cbTipoAnimales.getSelectedIndex()).get("ID");
                CargarGrupos();
            } else {

            }
        }
    }//GEN-LAST:event_cbTipoAnimalesActionPerformed

    private void cbFincaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFincaActionPerformed
        if (cbFinca.getItemCount() > 0) {
            System.out.println("cbFinca.getSelectedIndex()--" + cbFinca.getSelectedIndex());
            if (cbFinca.getSelectedIndex() >= 0) {
                if(!idFinca.equals(listaFincas.get(cbFinca.getSelectedIndex()).get("ID"))){
                    LimpiarJList(lstGrupos, modlistGrupos);
                }
                idFinca = listaFincas.get(cbFinca.getSelectedIndex()).get("ID");
                CargarListaTipoAnimales();
            } else {
                cbTipoAnimales.removeAllItems();
            }
        }
    }//GEN-LAST:event_cbFincaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox cbFinca;
    public javax.swing.JComboBox cbTipoAnimales;
    private javax.swing.JCheckBox chHembra;
    private javax.swing.JCheckBox chMacho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTid;
    private javax.swing.JLabel lblTid1;
    private javax.swing.JLabel lblTid2;
    private javax.swing.JLabel lblTid3;
    private javax.swing.JLabel lblTid4;
    private javax.swing.JList lstGrupos;
    private javax.swing.JList lstMedicamentos;
    // End of variables declaration//GEN-END:variables

    private void CargarListaFincas() {
        listaFincas = controlgen.GetComboBox("SELECT '-1' AS ID, 'Seleccionar' AS DESCRIPCION\n"
                + "UNION\n"
                + "SELECT id AS ID, descripcion AS DESCRIPCION\n"
                + "FROM fincas\n"
                + "/*UNION \n"
                + "SELECT 'ALL' AS ID, 'TODOS' AS DESCRIPCION*/");

        Utilidades.LlenarComboBox(cbFinca, listaFincas, "DESCRIPCION");
        cbFinca.setSelectedIndex(1);
        CargarListaTipoAnimales();
    }

    private void CargarListaTipoAnimales() {
        listaTipoAnimales = controlgen.GetComboBox("SELECT '-1' AS ID, 'Seleccionar' AS DESCRIPCION\n"
                + "UNION\n"
                + "SELECT id AS ID, descripcion AS DESCRIPCION\n"
                + "FROM tipo_animales\n"
                + "WHERE id_finca = '" + idFinca + "' AND estado = 'Activo'\n"
                + "ORDER BY id ASC");

        Utilidades.LlenarComboBox(cbTipoAnimales, listaTipoAnimales, "DESCRIPCION");
        cbTipoAnimales.setSelectedIndex(0);
    }

    private void CargarGrupos() {
        listaGrupos = controlgen.GetComboBox("SELECT id AS ID, descripcion AS DESCRIPCION\n"
                + "FROM grupos gr \n"
                + "WHERE `id_tipo_animal` = '" + idTipoAnimal + "' AND estado = 'Activo' and pesable = '1'\n"
                + "ORDER BY descripcion ASC");
        LlenarJList(listaGrupos, "DESCRIPCION", lstGrupos, modlistGrupos);
    }

    private void CargarListaMedicamentos() {
        listaMedicamentos = controlgen.GetComboBox("SELECT id AS ID, CONCAT(descripcion, '(',`unidad_medida`,')') DESCRIPCION\n"
                + "FROM `medicamentos`\n"
                + "WHERE estado = 'Activo'");
        LlenarJList(listaMedicamentos, "DESCRIPCION", lstMedicamentos, modlistMedicamentos);

    }

    private void LlenarJList(List<Map<String, String>> datos, String keyB, JList Lista, DefaultListModel modlist) {
        LimpiarJList(Lista, modlist);
        for (Map<String, String> dat : datos) {
            modlist.addElement(dat.get(keyB));
        }
        Lista.setModel(modlist);
    }

    private void LimpiarJList(JList Lista, DefaultListModel modlist) {
        modlist.removeAllElements();
        Lista.setModel(modlist);
    }

    public void CrearInforme() {
        String[] idsMedicamentos = getDatosLista(lstMedicamentos, listaMedicamentos, "ID");
        String[] idsGrupos = getDatosLista(lstGrupos, listaGrupos, "ID");
        String inGrupos = getIN(idsGrupos);
        String inMedicamentos = getIN(idsMedicamentos);
        String SexoH = chHembra.isSelected() ? "1" : "0";
        String SexoM = chMacho.isSelected() ? "1" : "0";
        
        if(inGrupos.equals("")){
            JOptionPane.showMessageDialog(null, "Por favor seleccione al menos un grupo para realizar la operacion.");
            return;
        }

        if(idTipoAnimal.equals("-1")){
            JOptionPane.showMessageDialog(null, "Por favor seleccione el tipo de animal para realizar la operacion.");
            return;
        }
        Map<String, String> infor = new HashMap<>();
        infor.put("IDTIPO", idTipoAnimal);
        infor.put("IDFINCA", idFinca);
        infor.put("GRUPOS", inGrupos);
        infor.put("MEDICAMENTOS", inMedicamentos);
        System.out.println("SexoH-->"+SexoH);
        System.out.println("SexoM-->"+SexoM);
        System.out.println("cond1-->"+(SexoH.equals("0") && SexoM.equals("0")));
        System.out.println("cond2-->"+(SexoH.equals("1") && SexoM.equals("1")));
        System.out.println("cond3-->"+((SexoH.equals("0") && SexoM.equals("0")) || (SexoH.equals("1") && SexoM.equals("1"))));
        if((SexoH.equals("0") && SexoM.equals("0")) || (SexoH.equals("1") && SexoM.equals("1"))){
            System.out.println("");
            infor.put("SEXO", "");
        }else{
            infor.put("SEXO", (SexoH.equals("1") ? "hembra" : "macho"));
        }
        

        ModeloInformes informes = new ModeloInformes();
        informes.setCategoria("0");
        informes.setInforme("0");
        informes.setInformacion(infor);

        ControlInformes contInformes = new ControlInformes();
        contInformes.GenerarInformes(informes);

    }

    private String[] getDatosLista(JList lista, List<Map<String, String>> listaDatos, String key) {
        String[] ids = new String[lista.getSelectedIndices().length];
        int x = 0;
        for (int ind : lista.getSelectedIndices()) {
            ids[x] = listaDatos.get(ind).get("" + key);
            x++;
        }
        return ids;
    }

    private String getIN(String[] datos) {
        String in = "";
        for (String dat : datos) {
            in += (in.equals("") ? "" : ",") + "'" + dat + "'";
        }
        return in;
    }

}
