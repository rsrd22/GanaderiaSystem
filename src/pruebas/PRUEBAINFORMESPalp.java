/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pruebas;

import Configuracion.ConfiguracionPropiedades;
import Control.*;
import Modelo.ModeloInformes;
import Utilidades.Utilidades;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JList;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author MERRY
 */
public class PRUEBAINFORMESPalp extends javax.swing.JFrame {
    public ControlGeneral controlgen = new ControlGeneral(); 
    public String idFinca;
    public String idTipoAnimal;
    public List<Map<String, String>> listaFincas;
    public List<Map<String, String>> listaTipoAnimales;
    public List<Map<String, String>> listaMedicamentos;
    public List<Map<String, String>> listaGrupos;
    public DefaultListModel modlistGrupos;
    public DefaultListModel modlistMedicamentos;
    
    
    /**
     * Creates new form PRUEBAINFORMES
     */
    public PRUEBAINFORMESPalp() {
        initComponents();
        lstMedicamentos.setSelectionModel(new DefaultListSelectionModel() {
            private int i0 = -1;
            private int i1 = -1;

            public void setSelectionInterval(int index0, int index1) {
                if(i0 == index0 && i1 == index1){
                    if(getValueIsAdjusting()){
                         setValueIsAdjusting(false);
                         setSelection(index0, index1);
                    }
                }else{
                    i0 = index0;
                    i1 = index1;
                    setValueIsAdjusting(false);
                    setSelection(index0, index1);
                }
            }
            private void setSelection(int index0, int index1){
                if(super.isSelectedIndex(index0)) {
                    super.removeSelectionInterval(index0, index1);
                }else {
                    super.addSelectionInterval(index0, index1);
                }
            }
        });
        lstGrupos.setSelectionModel(new DefaultListSelectionModel() {
            private int i0 = -1;
            private int i1 = -1;

            public void setSelectionInterval(int index0, int index1) {
                if(i0 == index0 && i1 == index1){
                    if(getValueIsAdjusting()){
                         setValueIsAdjusting(false);
                         setSelection(index0, index1);
                    }
                }else{
                    i0 = index0;
                    i1 = index1;
                    setValueIsAdjusting(false);
                    setSelection(index0, index1);
                }
            }
            private void setSelection(int index0, int index1){
                if(super.isSelectedIndex(index0)) {
                    super.removeSelectionInterval(index0, index1);
                }else {
                    super.addSelectionInterval(index0, index1);
                }
            }
        });
        
        idFinca = "";
        idTipoAnimal = "";
        listaFincas = new ArrayList<>();
        listaTipoAnimales = new ArrayList<>();
        modlistGrupos = new DefaultListModel();
        modlistMedicamentos = new DefaultListModel();
        CargarListaFincas();
        CargarListaMedicamentos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblTid2 = new javax.swing.JLabel();
        cbTipoAnimales = new javax.swing.JComboBox();
        cbFinca = new javax.swing.JComboBox();
        lblTid = new javax.swing.JLabel();
        lblTid1 = new javax.swing.JLabel();
        lblTid4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstMedicamentos = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstGrupos = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Pesaje");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, -1, -1));

        lblTid2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid2.setForeground(new java.awt.Color(59, 123, 50));
        lblTid2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid2.setText("Tipo Animales");
        jPanel1.add(lblTid2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));

        cbTipoAnimales.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbTipoAnimales.setForeground(new java.awt.Color(59, 123, 50));
        cbTipoAnimales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoAnimalesActionPerformed(evt);
            }
        });
        jPanel1.add(cbTipoAnimales, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, 220, 30));

        cbFinca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbFinca.setForeground(new java.awt.Color(59, 123, 50));
        cbFinca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFincaActionPerformed(evt);
            }
        });
        jPanel1.add(cbFinca, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 200, 30));

        lblTid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid.setForeground(new java.awt.Color(59, 123, 50));
        lblTid.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid.setText("Medicamentos");
        jPanel1.add(lblTid, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        lblTid1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid1.setForeground(new java.awt.Color(59, 123, 50));
        lblTid1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid1.setText("Finca");
        jPanel1.add(lblTid1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        lblTid4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTid4.setForeground(new java.awt.Color(59, 123, 50));
        lblTid4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTid4.setText("Grupos");
        jPanel1.add(lblTid4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, 20));

        lstMedicamentos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstMedicamentos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 210, 190));

        lstGrupos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstGrupos);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 220, 190));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(497, 10, 40, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbTipoAnimalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoAnimalesActionPerformed
        if (cbTipoAnimales.getItemCount() > 0) {
            if (cbTipoAnimales.getSelectedIndex() >= 0) {
                idTipoAnimal = listaTipoAnimales.get(cbTipoAnimales.getSelectedIndex()).get("ID");
                CargarGrupos();
            } else{
                
            }
        }
    }//GEN-LAST:event_cbTipoAnimalesActionPerformed

    private void cbFincaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFincaActionPerformed
        if (cbFinca.getItemCount() > 0) {
            System.out.println("cbFinca.getSelectedIndex()--" + cbFinca.getSelectedIndex());
            if (cbFinca.getSelectedIndex() >= 0) {
                idFinca = listaFincas.get(cbFinca.getSelectedIndex()).get("ID");
                CargarListaTipoAnimales();
            } else {
                cbTipoAnimales.removeAllItems();
            }
        }
    }//GEN-LAST:event_cbFincaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CrearInforme();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PRUEBAINFORMESPalp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PRUEBAINFORMESPalp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PRUEBAINFORMESPalp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PRUEBAINFORMESPalp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(PRUEBAINFORMESPalp.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(PRUEBAINFORMESPalp.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(PRUEBAINFORMESPalp.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(PRUEBAINFORMESPalp.class.getName()).log(Level.SEVERE, null, ex);
                }
                ConfiguracionPropiedades.cargarConfiguracion();
                new PRUEBAINFORMESPalp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox cbFinca;
    public javax.swing.JComboBox cbTipoAnimales;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTid;
    private javax.swing.JLabel lblTid1;
    private javax.swing.JLabel lblTid2;
    private javax.swing.JLabel lblTid4;
    private javax.swing.JList lstGrupos;
    private javax.swing.JList lstMedicamentos;
    // End of variables declaration//GEN-END:variables

    private void CargarListaFincas() {
        listaFincas = controlgen.GetComboBox("SELECT '-1' AS ID, 'Seleccionar' AS DESCRIPCION\n"
                + "UNION\n"
                + "SELECT id AS ID, descripcion AS DESCRIPCION\n"
                + "FROM fincas\n"
                + "/*UNION \n"
                + "SELECT 'ALL' AS ID, 'TODOS' AS DESCRIPCION*/");

        Utilidades.LlenarComboBox(cbFinca, listaFincas, "DESCRIPCION");
        cbFinca.setSelectedIndex(1);
        CargarListaTipoAnimales();
    }
    
    private void CargarListaTipoAnimales() {
        listaTipoAnimales = controlgen.GetComboBox("SELECT '-1' AS ID, 'Seleccionar' AS DESCRIPCION\n"
                + "UNION\n"
                + "SELECT id AS ID, descripcion AS DESCRIPCION\n"
                + "FROM tipo_animales\n"
                + "WHERE id_finca = '" + idFinca + "' AND estado = 'Activo'\n"
                + "ORDER BY id ASC");

        Utilidades.LlenarComboBox(cbTipoAnimales, listaTipoAnimales, "DESCRIPCION");
        cbTipoAnimales.setSelectedIndex(0);
    }

    private void CargarGrupos() {
        listaGrupos = controlgen.GetComboBox("SELECT id AS ID, descripcion AS DESCRIPCION\n" +
                                                "FROM grupos gr \n" +
                                                "WHERE `id_tipo_animal` = '"+idTipoAnimal+"' AND estado = 'Activo' and palpable = '1'\n" +
                                                "ORDER BY descripcion ASC");
        LlenarJList(listaGrupos, "DESCRIPCION", lstGrupos, modlistGrupos);
    }

    private void CargarListaMedicamentos() {
        listaMedicamentos = controlgen.GetComboBox("SELECT id AS ID, CONCAT(descripcion, '(',`unidad_medida`,')') DESCRIPCION\n" +
                                                    "FROM `medicamentos`\n" +
                                                    "WHERE estado = 'Activo'");
        LlenarJList(listaMedicamentos, "DESCRIPCION", lstMedicamentos, modlistMedicamentos);
        
    }
   
    private void LlenarJList(List<Map<String, String>> datos, String keyB, JList Lista, DefaultListModel modlist){
        for (Map<String, String> dat: datos) {
            modlist.addElement(dat.get(keyB));
        }
        Lista.setModel(modlist);
    }
 
    private void LimpiarJList(JList Lista, DefaultListModel modlist) {
        modlist = new DefaultListModel();
        Lista.setModel(modlist);
    }

    private void CrearInforme() {
        String[] idsMedicamentos = getDatosLista(lstMedicamentos, listaMedicamentos, "ID");
        String[] idsGrupos = getDatosLista(lstGrupos, listaGrupos, "ID");
        String inGrupos = getIN(idsGrupos);
        String inMedicamentos = getIN(idsMedicamentos);
        
        Map<String, String> infor = new HashMap<>();
        infor.put("IDTIPO", idTipoAnimal);
        infor.put("IDFINCA", idFinca);
        infor.put("GRUPOS", inGrupos);
        infor.put("MEDICAMENTOS", inMedicamentos);
        
        ModeloInformes informes = new ModeloInformes();
        informes.setCategoria("0");
        informes.setInforme("1");
        informes.setInformacion(infor);
        
        ControlInformes contInformes = new ControlInformes();
        contInformes.GenerarInformes(informes);
        
    }
    
    private String[] getDatosLista(JList lista, List<Map<String, String>> listaDatos, String key) {
        String[] ids = new String[lista.getSelectedIndices().length];
        int x =0;
        for(int ind :lista.getSelectedIndices()){
            ids[x] = listaDatos.get(ind).get(""+key);
            x++;
        }
        return ids;
    }
    
    
    private String getIN(String[] datos) {
        String in = "";
        for(String dat: datos){
            in += (in.equals("")?"":",")+"'"+dat+"'";
        }
        return in;
    }
    
    
    
    
}
